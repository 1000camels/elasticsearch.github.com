---
layout: doc_es
title: ElasticSearch Docs | Mapping | Root Object Type
---

<script type="text/javascript">
docBreadcrumb = [
    ["elasticsearch", "ElasticSearch"], 
    ["mapping", "Mapping"], 
    ["root_object_type", "Root Object Type"], 
];
</script>

h1. Root Object Type

p. The root object mapping is an "object type mapping":../object_type that maps the root object (the type itself). On top of all the different mappings that can be set using the "object type mapping":../object_type, it allows for additional, type level mapping definitions.

p. The root object mapping allows to index a JSON document that either starts with the actual mapping type, or only contains its fields. For example, the following @tweet@ JSON can be indexed:

<pre class="prettyprint lang-js">
{
    tweet {
        message : "This is a tweet!"
    }
}
</pre>

p. But, also the following JSON can be indexed:

<pre class="prettyprint lang-js">
{
    message : "This is a tweet!"
}
</pre>

p. The above can be done since the API for the index operation already includes the type the JSON document belongs to.

h2. Index / Search Analyzers

p. The root object allows to define type mapping level analyzers for index and search that will be used with all different fields that do not explicitly set analyzers on their own. Here is an example:

<pre class="prettyprint lang-js">
{
    tweet : {
        indexAnalyzer : "standard",
        searchAnalyzer : "standard"
    }
}
</pre>

p. The above simply explicitly defines both the @indexAnalyzer@ and @searchAnalyzer@ that will be used. There is also an option to use the @analyzer@ attribute to set both the @searchAnalyzer@ and @indexAnalyzer@.

h2. Boost Field

p. Boosting is the process of enhancing the relevancy of a document or field. Field level mapping allows to define explicit boost level on a specific field. The boost field mapping allows to define a boost field mapping where *its content will control the boost level of the document*. For example:

<pre class="prettyprint lang-js">
{
    tweet : {
        boostField : {name : "_boost", nullValue : 1.0}
    }
}
</pre>

p. The above mapping defines mapping for a field named @_boost@. If the @_boost@ field exists within the JSON document indexed, its value will control the boost level of the document indexed. For example, the following JSON document will be indexed with a boost value of @2.2@:

<pre class="prettyprint lang-js">
{
    tweet {
        _boost : 2.2,
        message : "This is a tweet!"
    }
}
</pre>

