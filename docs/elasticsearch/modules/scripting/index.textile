---
layout: doc_es
title: ElasticSearch Docs | Modules | Scripting
---

<script type="text/javascript">
docBreadcrumb = [
    ["elasticsearch", "ElasticSearch"], 
    ["modules", "Modules"], 
    ["scripting", "Scripting"], 
];
</script>

h1. Scripting Module

p. The scripting module allows to use scripts in order to evaluate custom expressions within different areas within the index module. For example, scripts can be used to return "script fields" as part of a search request, can be used to evaluate a custom score for a query and so on.

p. The scripting module uses "mvel":http://mvel.codehaus.org/ as the scripting language with some extensions. mvel is used since its extremely fast and very simple to use, and in most cases, simple expressions are needed (for example, mathematical equations).

h2. Document Fields

p. Most scripting revolve around the use of specific document fields data. The @doc['field_name']@ can be used to access specific field data within a document (the document in question is usually derived by the context the script is used). The following data can be extracted from a field:

|_. Expression |_. Description |
|@doc['field_name'].value@|The native value of the field. For example, if its a short type, it will be short.|
|doc['field_name'].values|The native array values of the field. For example, if its a short type, it will be short[]. Remember, a field can have several values within a single doc. Returns an empty array if the field has no values.|
|@doc['field_name'].stringValue@|The string value of the field.|
|@doc['field_name'].doubleValue@|The converted double of the field. Replace `double` with `int`, `long`, `float`, `short`, `byte` for the respective values.|
|@doc['field_name'].doubleValues@|A converted double values array.|
|@doc['field_name'].date@| Applies only to date / long (timestamp) types, returns a "MutableDateTime":http://joda-time.sourceforge.net/api-release/org/joda/time/MutableDateTime.html allowing to get date / time specific data. For example: @doc['field_name'].date.minuteOfHour@|
|@doc['field_name'].dates@|Return an array of date values for the field.|
|@doc['field_name'].empty@|A boolean indicating if the field has no values within the doc.|
|@doc['field_name'].multiValued@|A boolean indicating that the field has several values within the corpus.|

h2. Built In Functions

p. There are several built in functions that can be used within scripts. They include:

|_. Function |_. Description |
|@time@|The current time in milliseconds.|
|@sin(a)@|Returns the trigonometric sine of an angle.|
|@cos(a)@|Returns the trigonometric cosine of an angle.|
|@tan(a)@|Returns the trigonometric tangent of an angle.|
|@asin(a)@|Returns the arc sine of a value.|
|@acos(a)@|Returns the arc cosine of a value.|
|@atan(a)@|Returns the arc tangent of a value.|
|@toRadians(angdeg)@|Converts an angle measured in degrees to an approximately equivalent angle measured in radians|
|@toDegrees(angrad)@|Converts an angle measured in radians to an approximately equivalent angle measured in degrees.|
|@exp(a)@|Returns Euler's number _e_ raised to the power of value.|
|@log(a)@|Returns the natural logarithm (base _e_) of a value.|
|@log10(a)@|Returns the base 10 logarithm of a value.|
|@sqrt(a)@|Returns the correctly rounded positive square root of a value.|
|@cbrt(a)@|Returns the cube root of a double value.|
|@IEEEremainder(f1, f2)@|Computes the remainder operation on two arguments as prescribed by the IEEE 754 standard.|
|@ceil(a)@|Returns the smallest (closest to negative infinity) value that is greater than or equal to the argument and is equal to a mathematical integer.|
|@floor(a)@|Returns the largest (closest to positive infinity) value that is less than or equal to the argument and is equal to a mathematical integer.|
|@rint(a)@|Returns the value that is closest in value to the argument and is equal to a mathematical integer.|
|@atan2(y, x)@|Returns the angle <i>theta</i> from the conversion of rectangular coordinates (_x_, _y_) to polar coordinates (r,_theta_).|
|@pow(a, b)@|Returns the value of the first argument raised to the power of the second argument.|
|@round(a)@|Returns the closest _int_ to the argument.|
|@random()@|Returns a random _double_ value.|
|@abs(a)@|Returns the absolute value of a value.|
|@max(a, b)@|Returns the greater of two values.|
|@min(a, b)@|Returns the smaller of two values.|
|@ulp(d)@|Returns the size of an ulp of the argument.|
|@signum(d)@|Returns the signum function of the argument.|
|@sinh(x)@|Returns the hyperbolic sine of a value.|
|@cosh(x)@|Returns the hyperbolic cosine of a value.|
|@tanh(x)@|eturns the hyperbolic tangent of a value.|
|@hypot(x, y)@|Returns sqrt(_x^2_ + _y^2_) without intermediate overflow or underflow.|
