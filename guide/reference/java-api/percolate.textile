---
layout: guide
title: Percolate Java API
cat: guide
sidebar: reference_java_api
---

p. The percolator allows to register queries against an index, and then send @percolate@ requests which include a doc, and getting back the queries that match on that doc out of the set of registered queries.

Read the main "percolate":/guide/reference/api/percolate/ documentation before reading this guide.

<pre class="prettyprint lang-java">
QueryBuilder qb = termQuery("content", "amazing");

client.prepareIndex("_percolator", "myDocumentType", "myQueryName")
    .setSource(qb)
    .setRefresh(true)
    .execute().actionGet();
</pre>

This indexes the above term query under the name "myQueryName".

In order to check a document against the registered queries, use this code:


<pre class="prettyprint lang-java">
//Build a document to check against the percolator
XContentBuilder docBuilder = XContentFactory.jsonBuilder().startObject();
docBuilder.field("content", "This is amazing!");
docBuilder.endObject();
//Percolate
PercolateResponse response = 
	client.preparePercolate("testindex", "myDocumentType").setSource(docBuilder).execute().actionGet();

for(String result : response) {
    //Handle the result which is the name of
    //the query in the percolator
}
</pre>

